@page
@model SSD_Assignment.Pages.Books.CartModel
@{
    ViewData["Title"] = "Cart";
}

<style>
    .cart-items {
        float: left;
        margin-left: auto;
        margin-right: auto;
        margin-top: 1em;
        margin-bottom: 5em;
        padding: 0;

        display: grid;
        grid-gap: 1em;
        grid-template-columns: repeat(auto-fit, 23%);
    }
    .cart-item {
        display: flex;
        justify-content: left;
        flex-direction: column;
        padding: 0.5em;
        /*border: 1px solid black;*/
    }
    .cart-item img {
        box-shadow: 0 0 5px black;
    }
    .cart-item > * {
        margin-bottom: 1em;
        display: flex;
        flex-direction: column;
    }
    .cart-item > * > .header{
        font-size: 0.75em;
    }
</style>

<h1>Cart</h1>
<!--<button onclick="addItemToCart(cartItems)">Click to show Cart</button>-->
<div class="cart-items container-fluid"></div>
<button onclick="checkout()">Check out</button>
<script>
    let cartItemList = document.querySelector("div.cart-items");

    let cartItems = JSON.parse(sessionStorage.getItem("cartItems"));
    console.log(cartItems)

    function addItemToCart(cartItems) {

        if (!cartItems) {
            cartItemList.innerHTML = "<h2>Your cart is empty. Add some books into your cart!</h2>";
            return;
        }

        for (var book of cartItems) {

            let { title, price, imgSrc } = book;

            //Create Divs and Spans Elements to be inputted into HTML

            //Cart Item
            let cartItem = document.createElement('div')
            cartItem.className = "cart-item container-fluid"
            cartItemList.appendChild(cartItem)

            //Cart Image
            let cartImg = document.createElement('img');
            cartImg.src = imgSrc;
            cartItem.appendChild(cartImg);

            //Cart Title
            let cartTitleColumn = document.createElement('div')
            cartTitleColumn.className = "cart-item-title-column"
            cartItem.appendChild(cartTitleColumn)

            let titleHeader = document.createElement('span')
            titleHeader.className = 'header';
            titleHeader.innerText = 'Title'
            cartTitleColumn.appendChild(titleHeader)

            let cartItemTitle = document.createElement('span')
            cartItemTitle.className = "cart-item-title"
            cartItemTitle.innerHTML = title
            cartTitleColumn.appendChild(cartItemTitle)

            //Cart Price
            let cartPriceColumn = document.createElement('div')
            cartPriceColumn.className = "cart-item-price-column"
            cartItem.appendChild(cartPriceColumn)

            let priceHeader = document.createElement('span')
            priceHeader.className = 'header';
            priceHeader.innerText = 'Price'
            cartPriceColumn.appendChild(priceHeader)

            let cartItemPrice = document.createElement('span')
            cartItemPrice.className = "cart-item-price"
            cartItemPrice.innerHTML = `$${price}`;
            cartPriceColumn.appendChild(cartItemPrice)

            //Cart Quantity
            let cartQuantityColumn = document.createElement('div')
            cartQuantityColumn.className = "cart-item-quantity-column"
            cartItem.appendChild(cartQuantityColumn)

            let quantityHeader = document.createElement('span')
            quantityHeader.className = 'header';
            quantityHeader.innerText = 'Quantity'
            cartQuantityColumn.appendChild(quantityHeader)

            let cartItemQuantity = document.createElement('input')
            cartItemQuantity.className = "cart-item-quantity"
            cartItemQuantity.type = "number"
            cartItemQuantity.value = 1;
            cartItemQuantity.placeholder = 'Enter quantity'
            cartItemQuantity.onchange = e => {
                if (!cartItemQuantity.value) {
                    cartItemQuantity.value = 1;
                }

                var itemQuantity = cartItemQuantity.value;
                var subtotalPrice = itemQuantity * price;
                cartItemSubtotal.innerText = `$${subtotalPrice}`;
            }
            cartQuantityColumn.appendChild(cartItemQuantity)

            //Cart Subtotal
            let cartSubtotalColumn = document.createElement('div')
            cartSubtotalColumn.className = "cart-item-subtotal-column"
            cartItem.appendChild(cartSubtotalColumn)

            let subtotalHeader = document.createElement('span')
            subtotalHeader.className = 'header';
            subtotalHeader.innerText = 'Subtotal'
            cartSubtotalColumn.appendChild(subtotalHeader)

            let cartItemSubtotal = document.createElement('span')
            cartItemSubtotal.className = "cart-item-subtotal"
            cartItemQuantity.onchange();
            cartSubtotalColumn.appendChild(cartItemSubtotal)

        }

    }
    addItemToCart(cartItems);

    function checkout() {
        let cartItems = JSON.parse(sessionStorage.getItem("cartItems"));

        console.log("check out");
        //Bring users to the payment page
        if (cartItems.length > 0) {
            window.location.href = '.././PaymentPage/Payment';
        }
    }

</script>


